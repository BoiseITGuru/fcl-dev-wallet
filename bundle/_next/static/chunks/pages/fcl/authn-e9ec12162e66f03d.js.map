{"version":3,"file":"static/chunks/pages/fcl/authn-e9ec12162e66f03d.js","mappings":"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","sources":["webpack://_N_E/./components/AccountImage.tsx","webpack://_N_E/./src/avatar.ts","webpack://_N_E/./components/ConnectedAppIcon.tsx","webpack://_N_E/./hooks/useConfig.ts","webpack://_N_E/./components/Switch.tsx","webpack://_N_E/./src/accountGenerator.ts","webpack://_N_E/./src/init.ts","webpack://_N_E/./contexts/AuthnContext.tsx","webpack://_N_E/./hooks/useConnectedAppConfig.ts","webpack://_N_E/./hooks/useAuthnContext.ts","webpack://_N_E/./components/AccountSectionHeading.tsx","webpack://_N_E/./components/AccountListItemScopes.tsx","webpack://_N_E/./hooks/useThemeUI.ts","webpack://_N_E/./components/InfoIcon.tsx","webpack://_N_E/./components/ConnectedAppHeader.tsx","webpack://_N_E/./components/FormErrors.tsx","webpack://_N_E/./src/validate.ts","webpack://_N_E/./hooks/useAccount.ts","webpack://_N_E/./src/balance.ts","webpack://_N_E/./components/AccountBalances.tsx","webpack://_N_E/./hooks/useFUSDBalance.ts","webpack://_N_E/./components/AuthnActions.tsx","webpack://_N_E/./components/Label.tsx","webpack://_N_E/./components/Inputs.tsx","webpack://_N_E/./components/AccountForm.tsx","webpack://_N_E/./components/AccountsListItem.tsx","webpack://_N_E/./components/PlusButton.tsx","webpack://_N_E/./components/AccountsList.tsx","webpack://_N_E/./src/comps/err.comp.tsx","webpack://_N_E/./pages/fcl/authn.tsx","webpack://_N_E/./src/services.ts","webpack://_N_E/./src/accountAuth.ts","webpack://_N_E/./src/scopes.ts","webpack://_N_E/?d1ab"],"sourcesContent":["/** @jsxImportSource theme-ui */\nimport * as fcl from \"@onflow/fcl\"\nimport {Img} from \"react-image\"\nimport {avatar} from \"src/avatar\"\nimport {ThemeUICSSObject} from \"theme-ui\"\n\ninterface Props {\n  address?: string\n  src?: string\n  seed: string\n  sxStyles?: ThemeUICSSObject\n  lg?: boolean\n  flowAccountAddress: string\n  avatarUrl: string\n}\n\nconst styles = {\n  border: \"1px solid\",\n  borderColor: \"gray.200\",\n  backgroundColor: \"white\",\n  display: \"flex\",\n  alignItems: \"center\",\n  overflow: \"hidden\",\n  \"> img\": {\n    width: \"100%\",\n  },\n}\n\nexport default function AccountImage({\n  address = \"\",\n  src,\n  seed,\n  sxStyles = {},\n  lg,\n  flowAccountAddress,\n  avatarUrl,\n}: Props) {\n  const size = lg ? 65 : 50\n  const prefixedAddress = fcl.withPrefix(address)\n  const isServiceAccount =\n    prefixedAddress === fcl.withPrefix(flowAccountAddress)\n  const defaultSrc = isServiceAccount\n    ? \"/settings.svg\"\n    : avatar(avatarUrl, `${prefixedAddress}-${seed}`)\n\n  return (\n    <div\n      sx={{\n        ...styles,\n        ...sxStyles,\n        width: size,\n        height: size,\n        borderRadius: size,\n        border: isServiceAccount ? 0 : sxStyles.border || styles.border,\n      }}\n    >\n      <Img src={[src || defaultSrc, \"/missing-avatar-icon.svg\"]} />\n    </div>\n  )\n}\n","export const avatar = (avatarUrl: string, hash: string): string =>\n  encodeURI(`${avatarUrl}avatar/${hash}.svg`)\n","/** @jsxImportSource theme-ui */\n\nconst styles = {\n  image: {\n    borderRadius: 65,\n    width: 65,\n  },\n}\n\nexport default function ConnectedAppIcon({icon}: {icon?: string}) {\n  const appIcon = icon || \"/missing-app-icon.svg\"\n  return (\n    <img\n      src={appIcon}\n      sx={styles.image}\n      title={icon ? undefined : \"Missing app icon\"}\n    />\n  )\n}\n","import {ConfigContext} from \"contexts/ConfigContext\"\nimport {useContext} from \"react\"\n\nconst useConfig = () => {\n  return useContext(ConfigContext)\n}\n\nexport default useConfig\n","/** @jsxImportSource theme-ui */\nimport useVariants from \"hooks/useVariants\"\nimport {Switch as ThemeUISwitch, ThemeUICSSObject} from \"theme-ui\"\n\ntype Props = {\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n  defaultChecked?: boolean\n  variant?: \"primary\"\n  size?: \"lg\"\n  sx?: ThemeUICSSObject\n  id: string\n}\n\nconst Switch = ({\n  onClick,\n  defaultChecked = false,\n  variant = \"primary\",\n  size = \"lg\",\n  sx = {},\n  id = \"\",\n}: Props) => {\n  const variants = useVariants([\n    `forms.switch.${variant}`,\n    `forms.switch.sizes.${size}`,\n  ])\n  return (\n    <ThemeUISwitch\n      onClick={onClick}\n      defaultChecked={defaultChecked}\n      sx={{...sx, ...variants}}\n      id={id}\n      role=\"switch\"\n    />\n  )\n}\n\nexport default Switch\n","import Namegenerator from \"namegenerator\"\nimport {NewAccount} from \"src/accounts\"\n\nconst ALPHABET = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n]\n\nexport function accountLabelGenerator(index: number) {\n  const namegenerator = new Namegenerator(ALPHABET)\n  return `Account ${namegenerator.nameForId(index)}`\n}\n\nexport default function accountGenerator(index: number): NewAccount {\n  return {type: \"ACCOUNT\", label: accountLabelGenerator(index), scopes: []}\n}\n","import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\nimport {fetchConfigFromAPI} from \"contexts/ConfigContext\"\nimport getConfig from \"next/config\"\nimport FCLContract from \"cadence/contracts/FCL.cdc\"\nimport initTransaction from \"cadence/transactions/init.cdc\"\nimport {accountLabelGenerator} from \"src/accountGenerator\"\nimport {authz} from \"src/authz\"\nimport {SERVICE_ACCOUNT_LABEL} from \"src/constants\"\nimport {encodeServiceKey} from \"src/crypto\"\nimport fclConfig from \"src/fclConfig\"\n\nconst {publicRuntimeConfig} = getConfig()\n\nasync function isInitialized(flowAccountAddress: string): Promise<boolean> {\n  try {\n    const account = await fcl\n      .send([fcl.getAccount(flowAccountAddress)])\n      .then(fcl.decode)\n\n    if (account[\"contracts\"][\"FCL\"]) {\n      return true\n    }\n\n    return false\n  } catch (error) {\n    return false\n  }\n}\n\nexport async function initializeWallet() {\n  const {\n    flowAccessNode,\n    flowAccountAddress,\n    flowAccountPrivateKey,\n    flowAccountPublicKey,\n  } = await fetchConfigFromAPI()\n\n  fclConfig(\n    flowAccessNode,\n    flowAccountAddress,\n    publicRuntimeConfig.contractFungibleToken,\n    publicRuntimeConfig.contractFlowToken,\n    publicRuntimeConfig.contractFUSD\n  )\n\n  const initialized = await isInitialized(flowAccountAddress)\n\n  if (initialized) {\n    return\n  }\n\n  const autoGeneratedLabels = [\n    ...Array(publicRuntimeConfig.flowInitAccountsNo),\n  ].map((_n, i) => accountLabelGenerator(i))\n\n  const initAccountsLabels = [SERVICE_ACCOUNT_LABEL, ...autoGeneratedLabels]\n\n  const authorization = await authz(\n    flowAccountAddress,\n    publicRuntimeConfig.flowAccountKeyId,\n    flowAccountPrivateKey\n  )\n\n  const txId = await fcl\n    .send([\n      fcl.transaction(initTransaction),\n      fcl.args([\n        fcl.arg(Buffer.from(FCLContract, \"utf8\").toString(\"hex\"), t.String),\n        fcl.arg(encodeServiceKey(flowAccountPublicKey), t.String),\n        fcl.arg(initAccountsLabels, t.Array(t.String)),\n      ]),\n      fcl.proposer(authorization),\n      fcl.payer(authorization),\n      fcl.authorizations([authorization]),\n      fcl.limit(200),\n    ])\n    .then(fcl.decode)\n\n  await fcl.tx(txId).onceSealed()\n\n  // TODO: is this code block needed?\n  fcl\n    .account(flowAccountAddress)\n    .then((d: {contracts: Record<string, unknown>}) => {\n      // eslint-disable-next-line no-console\n      console.log(\"ACCOUNT\", Object.keys(d.contracts))\n    })\n}\n","import useConnectedAppConfig, {\n  ConnectedAppConfig,\n} from \"hooks/useConnectedAppConfig\"\nimport React, {createContext, useEffect, useState} from \"react\"\nimport {initializeWallet} from \"src/init\"\n\ntype AuthnContextType = {\n  connectedAppConfig: ConnectedAppConfig\n  appScopes: string[]\n  initError: string | null\n}\n\nexport const AuthnContext = createContext<AuthnContextType>({\n  connectedAppConfig: {} as ConnectedAppConfig,\n  appScopes: [],\n  initError: null,\n})\n\nexport function AuthnContextProvider({children}: {children: React.ReactNode}) {\n  const [isInitialized, setIsInitialized] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const {connectedAppConfig, appScopes} = useConnectedAppConfig()\n\n  useEffect(() => {\n    async function initialize() {\n      try {\n        await initializeWallet()\n        setIsInitialized(true)\n      } catch (error) {\n        setError(`Dev wallet initialization failed: ${error}`)\n      }\n    }\n\n    initialize()\n  }, [])\n\n  if (!isInitialized || !connectedAppConfig) return null\n  const value = {connectedAppConfig, appScopes, initError: error}\n\n  return <AuthnContext.Provider value={value}>{children}</AuthnContext.Provider>\n}\n","import {WalletUtils} from \"@onflow/fcl\"\nimport {useEffect, useState} from \"react\"\nimport {parseScopes} from \"src/scopes\"\n\nexport type ConnectedAppConfig = {\n  type: string\n  body: {\n    appIdentifier?: string | undefined\n    data: unknown\n    extensions: unknown[]\n    nonce?: string | undefined\n  }\n  service: Record<string, unknown>\n  config: {\n    services: {\"OpenID.scopes\": string}\n    app: {\n      icon: string\n      title: string\n    }\n  }\n}\n\nexport default function useConnectedAppConfig() {\n  const [connectedAppConfig, setConnectedAppConfig] =\n    useState<ConnectedAppConfig | null>(null)\n\n  useEffect(() => {\n    function callback(data: ConnectedAppConfig) {\n      setConnectedAppConfig(data)\n    }\n\n    WalletUtils.ready(callback)\n  }, [])\n\n  const appScopes = parseScopes(\n    connectedAppConfig?.config?.services?.[\"OpenID.scopes\"]\n  )\n\n  return {connectedAppConfig, appScopes}\n}\n","import {AuthnContext} from \"contexts/AuthnContext\"\nimport {useContext} from \"react\"\n\nconst useAuthnContext = () => {\n  return useContext(AuthnContext)\n}\n\nexport default useAuthnContext\n","/** @jsxImportSource theme-ui */\nimport {SXStyles} from \"types\"\n\nconst styles: SXStyles = {\n  headingContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  heading: {\n    textTransform: \"uppercase\",\n    color: \"gray.400\",\n    fontWeight: \"normal\",\n    fontSize: 0,\n    letterSpacing: \"0.05em\",\n  },\n}\n\nexport default function AccountSectionHeading({\n  compact,\n  children,\n}: {\n  compact?: boolean\n  children: React.ReactNode\n}) {\n  return (\n    <div sx={{...styles.headingContainer, height: compact ? 30 : 40}}>\n      <div sx={styles.heading}>{children}</div>\n    </div>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport Switch from \"components/Switch\"\nimport useAuthnContext from \"hooks/useAuthnContext\"\nimport {Label, Themed} from \"theme-ui\"\nimport {SXStyles} from \"types\"\nimport AccountSectionHeading from \"./AccountSectionHeading\"\n\nconst styles: SXStyles = {\n  headingContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  heading: {\n    textTransform: \"uppercase\",\n    color: \"gray.400\",\n    fontWeight: \"normal\",\n    fontSize: 0,\n    letterSpacing: \"0.05em\",\n  },\n  label: {textTransform: \"capitalize\", margin: 0},\n  scope: {\n    height: 40,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    borderBottom: \"1px solid\",\n    borderColor: \"gray.200\",\n  },\n}\n\nexport default function AccountListItemScopes({\n  scopes,\n  setScopes,\n  compact = false,\n}: {\n  scopes: Set<string>\n  setScopes: (newScopes: Set<string>) => void\n  compact?: boolean\n}) {\n  const {appScopes} = useAuthnContext()\n\n  const toggleScope = (scope: string) => {\n    scopes.has(scope) ? scopes.delete(scope) : scopes.add(scope)\n    setScopes(scopes)\n  }\n\n  return (\n    <div id=\"scopes\">\n      <AccountSectionHeading compact={compact}>\n        {appScopes.length > 0 && \"Scopes\"}\n      </AccountSectionHeading>\n      {appScopes.length > 0 && (\n        <>\n          <Themed.hr\n            sx={{backgroundColor: \"gray.400\", mt: 0, mb: compact ? 1 : 3}}\n          />\n          {appScopes.map(scope => (\n            <div key={scope}>\n              <div sx={{...styles.scope, paddingBottom: compact ? 1 : 3}}>\n                <Label htmlFor={`scope-${scope}`} sx={styles.label}>\n                  {scope}\n                </Label>\n                <div\n                  sx={{display: \"inline-flex\"}}\n                  data-test=\"account-scope-switch\"\n                >\n                  <Switch\n                    size=\"lg\"\n                    id={`scope-${scope}`}\n                    defaultChecked={scopes.has(scope)}\n                    onClick={() => toggleScope(scope)}\n                    aria-checked=\"true\"\n                  />\n                </div>\n              </div>\n            </div>\n          ))}\n        </>\n      )}\n    </div>\n  )\n}\n","import {FlowTheme} from \"src/theme\"\nimport {ThemeUIContextValue, useThemeUI as themeUIUseThemeUI} from \"theme-ui\"\n\ninterface FlowThemeContextValue extends Omit<ThemeUIContextValue, \"theme\"> {\n  theme: FlowTheme\n}\n\nconst useThemeUI = themeUIUseThemeUI as unknown as () => FlowThemeContextValue\n\nexport default useThemeUI\n","import useThemeUI from \"hooks/useThemeUI\"\nimport React from \"react\"\n\nfunction InfoIcon({active}: {active: boolean}) {\n  const {theme} = useThemeUI()\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"22\"\n      height=\"22\"\n      fill=\"none\"\n      viewBox=\"0 0 22 22\"\n    >\n      <path\n        stroke={active ? theme.colors?.green : theme.colors?.gray[500]}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M11 21c5.523 0 10-4.477 10-10S16.523 1 11 1 1 5.477 1 11s4.477 10 10 10zM11 15v-4M11 7v-.5\"\n      ></path>\n    </svg>\n  )\n}\n\nexport default InfoIcon\n","/** @jsxImportSource theme-ui */\nimport AccountImage from \"components/AccountImage\"\nimport InfoIcon from \"components/InfoIcon\"\nimport useAuthnContext from \"hooks/useAuthnContext\"\nimport {Account, NewAccount} from \"src/accounts\"\nimport {useState} from \"react\"\nimport {UNTITLED_APP_NAME} from \"src/constants\"\nimport {Button, Link, Themed} from \"theme-ui\"\nimport {SXStyles} from \"types\"\nimport ConnectedAppIcon from \"./ConnectedAppIcon\"\n\nconst styles: SXStyles = {\n  container: {\n    textAlign: \"center\",\n    position: \"relative\",\n  },\n  info: {\n    textAlign: \"left\",\n    fontSize: 1,\n    color: \"textMedium\",\n    marginTop: -2,\n  },\n  infoLabel: {\n    opacity: 0.8,\n  },\n  imageContainer: {\n    width: 65,\n    height: 65,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflow: \"hidden\",\n    margin: \"0 auto\",\n  },\n  title: {\n    marginTop: 3,\n    marginBottom: 2,\n  },\n  image: {\n    borderRadius: 65,\n    width: 65,\n  },\n  description: {\n    maxWidth: 340,\n    margin: \"0 auto\",\n  },\n  externalAddressLink: {ml: 1, color: \"blue\", fontSize: 1},\n  externalLinkImage: {\n    ml: 2,\n    position: \"relative\",\n    top: \"1px\",\n  },\n  infoButton: {\n    position: \"absolute\",\n    right: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  missingAppDetail: {\n    color: \"red.200\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n  },\n}\n\nfunction MissingAppDetail({text}: {text: string}) {\n  return (\n    <div sx={styles.missingAppDetail}>\n      {text}\n      <Link\n        href=\"https://docs.onflow.org/fcl/api/#common-configuration-keys\"\n        target=\"_blank\"\n        sx={{ml: 1, color: \"blue\"}}\n      >\n        Learn More\n      </Link>\n    </div>\n  )\n}\n\nexport default function ConnectedAppHeader({\n  title,\n  description,\n  info = true,\n  account,\n  flowAccountAddress,\n  avatarUrl,\n}: {\n  title?: string\n  description?: string\n  info?: boolean\n  account?: Account | NewAccount\n  flowAccountAddress: string\n  avatarUrl: string\n}) {\n  const [showInfo, setShowInfo] = useState(false)\n  const {\n    connectedAppConfig: {\n      config: {\n        app: {icon, title: connectedAppTitle},\n      },\n    },\n  } = useAuthnContext()\n  const toggleShowInfo = () => setShowInfo(prev => !prev)\n\n  return (\n    <div sx={styles.container}>\n      {info && (\n        <div id=\"info\">\n          {showInfo && (\n            <div sx={styles.info}>\n              <div>\n                <span sx={styles.infoLabel}>app.detail.icon:</span>{\" \"}\n                {icon || (\n                  <MissingAppDetail text=\"Missing, please include an icon.\" />\n                )}\n              </div>\n              <div>\n                <span sx={styles.infoLabel}>app.detail.title:</span>{\" \"}\n                {connectedAppTitle || (\n                  <MissingAppDetail text=\"Untitled, please include a title.\" />\n                )}\n              </div>\n              <Themed.hr />\n            </div>\n          )}\n        </div>\n      )}\n      <div>\n        {info && (\n          <Button\n            variant=\"unstyled\"\n            sx={styles.infoButton}\n            onClick={toggleShowInfo}\n            aria-controls=\"info\"\n            aria-expanded={showInfo}\n          >\n            <InfoIcon active={showInfo} />\n          </Button>\n        )}\n        <div sx={styles.imageContainer}>\n          {account?.address ? (\n            <AccountImage\n              address={account.address}\n              seed={connectedAppTitle}\n              lg={true}\n              flowAccountAddress={flowAccountAddress}\n              avatarUrl={avatarUrl}\n            />\n          ) : (\n            <ConnectedAppIcon icon={icon} />\n          )}\n        </div>\n        <Themed.h1 sx={styles.title}>\n          {title || connectedAppTitle || UNTITLED_APP_NAME}\n        </Themed.h1>\n        {!!description && (\n          <Themed.p sx={styles.description}>{description}</Themed.p>\n        )}\n      </div>\n    </div>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport {Box} from \"theme-ui\"\n\nexport const FieldError = ({children}: {children: React.ReactNode}) => {\n  const style = {\n    border: \"1px solid\",\n    borderColor: \"red.200\",\n    backgroundColor: \"red.100\",\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 4,\n    color: \"red.200\",\n    marginTop: \"-1px\",\n    px: \"20px\",\n    py: 3,\n    \"> a\": {\n      color: \"red.200\",\n    },\n  }\n\n  return <div sx={style}>{children}</div>\n}\n\nexport default function FormErrors({errors}: {errors: string[]}) {\n  return (\n    <Box mt={3} mb={4}>\n      <FieldError>{errors.join(\". \")}</FieldError>\n    </Box>\n  )\n}\n","import * as yup from \"yup\"\nimport {LABEL_MISSING_ERROR} from \"./constants\"\n\nconst updateAccountSchemaClientShape = {\n  label: yup.string().required(LABEL_MISSING_ERROR),\n}\n\nexport const updateAccountSchemaClient = yup\n  .object()\n  .shape(updateAccountSchemaClientShape)\n","import {useEffect, useState} from \"react\"\nimport {Account, getAccount} from \"src/accounts\"\n\nexport default function useAccount(address: string) {\n  const [account, setAccount] = useState<Account | null>(null)\n  const [error, setError] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n\n  function fetchAccount() {\n    getAccount(address)\n      .then(account => {\n        setAccount(account)\n      })\n      .catch(error => {\n        setError(error)\n      })\n      .finally(() => setIsLoading(false))\n  }\n\n  useEffect(() => {\n    fetchAccount()\n  }, [])\n\n  return {\n    data: account,\n    error: error,\n    isLoading: isLoading,\n    refresh: fetchAccount,\n  }\n}\n","// Formats string representations of UFix64 numbers. The maximum `UFix64` value is 184467440737.09551615\nexport function formattedBalance(amount: string) {\n  if (amount.length === 0) return \"0\"\n  const [integer, decimal] = amount.split(\".\")\n  // Format the integer separately to avoid rounding\n  const formattedInteger = parseFloat(integer).toLocaleString(\"en-US\")\n  return [formattedInteger, decimal?.replace(/0+$/, \"\")]\n    .filter(Boolean)\n    .join(\".\")\n}\n","/** @jsxImportSource theme-ui */\nimport * as fcl from \"@onflow/fcl\"\nimport useAccount from \"hooks/useAccount\"\nimport useFUSDBalance from \"hooks/useFUSDBalance\"\nimport {fundAccount} from \"src/accounts\"\nimport {formattedBalance} from \"src/balance\"\nimport {FLOW_TYPE, FUSD_TYPE, TokenTypes} from \"src/constants\"\nimport {Label, Themed} from \"theme-ui\"\nimport {SXStyles} from \"types\"\nimport AccountSectionHeading from \"./AccountSectionHeading\"\nimport Button from \"./Button\"\n\nconst styles: SXStyles = {\n  label: {textTransform: \"capitalize\", margin: 0, marginRight: \"auto\"},\n  accountSection: {\n    height: 50,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    borderBottom: \"1px solid\",\n    borderColor: \"gray.200\",\n  },\n  balance: {\n    fontSize: 1,\n  },\n  fundButton: {\n    fontWeight: \"bold\",\n    fontSize: 0,\n    color: \"black\",\n    ml: 4,\n    px: 30,\n    py: \"7px\",\n    borderColor: \"gray.200\",\n  },\n}\n\nexport default function AccountBalances({\n  address,\n  flowAccountAddress,\n}: {\n  address: string\n  flowAccountAddress: string\n}) {\n  const {data: fusdBalance, refresh: refreshFUSD} = useFUSDBalance(address)\n  const {data: account, refresh: refreshAccount} = useAccount(address)\n\n  const isServiceAccount =\n    fcl.withPrefix(address) === fcl.withPrefix(flowAccountAddress)\n\n  const fund = async (token: TokenTypes) => {\n    await fundAccount(address, token)\n    refreshAccount()\n    refreshFUSD()\n  }\n\n  return (\n    <>\n      <AccountSectionHeading compact={true}>Funds</AccountSectionHeading>\n      <Themed.hr sx={{backgroundColor: \"gray.400\", m: 0}} />\n      <div sx={styles.accountSection}>\n        <Label sx={styles.label}>FLOW</Label>\n        <div sx={styles.balance}>\n          {!!account?.balance ? formattedBalance(account.balance) : \"0\"}\n        </div>\n        {!isServiceAccount && (\n          <Button\n            variant=\"ghost\"\n            size=\"xs\"\n            onClick={() => fund(FLOW_TYPE)}\n            sx={styles.fundButton}\n            type=\"button\"\n          >\n            Fund\n          </Button>\n        )}\n      </div>\n      <div sx={styles.accountSection}>\n        <Label sx={styles.label}>FUSD</Label>\n        <div sx={styles.balance}>\n          {fusdBalance && formattedBalance(fusdBalance.toString())}\n        </div>\n        {!isServiceAccount && (\n          <Button\n            variant=\"ghost\"\n            size=\"xs\"\n            onClick={() => fund(FUSD_TYPE)}\n            sx={styles.fundButton}\n            type=\"button\"\n          >\n            Fund\n          </Button>\n        )}\n      </div>\n    </>\n  )\n}\n","import {useEffect, useState} from \"react\"\nimport {getAccountFUSDBalance} from \"src/accounts\"\n\nexport function compFUSDBalanceKey(address: string) {\n  return `${address}/fusd-balance`\n}\n\nexport function expandFUSDBalanceKey(key: string) {\n  return {\n    address: key.split(\"/\")[0],\n  }\n}\n\nexport default function useFUSDBalance(address: string) {\n  const [balance, setBalance] = useState<number | null>(null)\n  const [error, setError] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n\n  function fetchFUSDBalance() {\n    getAccountFUSDBalance(address)\n      .then(balance => {\n        setBalance(balance)\n      })\n      .catch(error => {\n        setError(error)\n      })\n      .finally(() => setIsLoading(false))\n  }\n\n  useEffect(() => {\n    fetchFUSDBalance()\n  }, [])\n\n  return {\n    data: balance,\n    error: error,\n    isLoading: isLoading,\n    refresh: fetchFUSDBalance,\n  }\n}\n","/** @jsxImportSource theme-ui */\nimport {useFormikContext} from \"formik\"\nimport {Account, NewAccount} from \"src/accounts\"\nimport {SXStyles} from \"types\"\nimport Button from \"./Button\"\n\nconst styles: SXStyles = {\n  actionsContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    borderTop: \"1px solid\",\n    borderColor: \"gray.200\",\n    backgroundColor: \"white\",\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10,\n    px: [10, 20],\n  },\n  actions: {\n    display: \"flex\",\n    flex: 1,\n    pt: 20,\n    pb: 20,\n  },\n}\n\nfunction AuthnActions({\n  account,\n  onCancel,\n}: {\n  account: Account | NewAccount\n  onCancel: () => void\n}) {\n  const {isSubmitting, isValid, submitForm} = useFormikContext()\n\n  return (\n    <div sx={styles.actionsContainer}>\n      <div sx={styles.actions}>\n        <Button\n          onClick={onCancel}\n          type=\"button\"\n          variant=\"ghost\"\n          block\n          size=\"lg\"\n          sx={{flex: 1, mr: 10, w: \"50%\"}}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          type=\"button\"\n          block\n          size=\"lg\"\n          sx={{flex: 1, ml: 10, w: \"50%\"}}\n          disabled={isSubmitting || !isValid}\n          onClick={submitForm}\n        >\n          {account.address ? \"Save\" : \"Create\"}\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default AuthnActions\n","/** @jsxImportSource theme-ui */\nimport {Label as ThemeUILabel, LabelProps} from \"theme-ui\"\n\ntype Props = {\n  required?: boolean\n  children: React.ReactNode\n} & LabelProps\n\nconst styles = {\n  required: {\n    color: \"red.200\",\n    fontWeight: \"normal\",\n  },\n}\n\nconst Label = ({required = false, children, ...props}: Props) => {\n  return (\n    <ThemeUILabel {...props}>\n      {children}\n      {required && <div sx={styles.required}>*</div>}\n    </ThemeUILabel>\n  )\n}\nexport default Label\n","/** @jsxImportSource theme-ui */\nimport {FieldError} from \"components/FormErrors\"\nimport Label from \"components/Label\"\nimport {FieldProps} from \"formik\"\nimport {Input, ThemeUICSSObject, Theme} from \"theme-ui\"\n\ntype CustomFieldProps = FieldProps & {\n  inputLabel: string\n  disabled?: boolean\n  required?: boolean\n  sx?: ThemeUICSSObject\n}\n\nconst errorInputStyles = {\n  border: \"1px solid\",\n  borderColor: \"red.200\",\n  color: \"red.200\",\n  outlineColor: \"red.200\",\n  borderBottomLeftRadius: 0,\n  borderBottomRightRadius: 0,\n  \"&:focus, &:focus-visible\": {\n    outline: \"none\",\n    boxShadow: (theme: Theme) =>\n      `inset 0 0 0 1pt ${theme.colors?.red ? [\"200\"] : \"\"}`,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n}\n\nexport const CustomInputComponent = ({\n  field,\n  form: {touched, errors},\n  inputLabel,\n  required = false,\n  sx = {},\n  ...props\n}: CustomFieldProps) => {\n  const showError = touched[field.name] && errors[field.name]\n\n  return (\n    <>\n      <Label required={required}>{inputLabel}</Label>\n      <Input\n        width=\"100%\"\n        {...field}\n        {...props}\n        sx={showError ? {...sx, ...errorInputStyles} : sx}\n      />\n      {showError && <FieldError>{errors[field.name]}</FieldError>}\n    </>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport AccountListItemScopes from \"components/AccountListItemScopes\"\nimport ConnectedAppHeader from \"components/ConnectedAppHeader\"\nimport {styles as dialogStyles} from \"components/Dialog\"\nimport FormErrors from \"components/FormErrors\"\nimport {Field, Form, Formik} from \"formik\"\nimport {useState} from \"react\"\nimport {Account, NewAccount, newAccount, updateAccount} from \"src/accounts\"\nimport {updateAccountSchemaClient} from \"src/validate\"\nimport {Box} from \"theme-ui\"\nimport {SXStyles} from \"types\"\nimport AccountBalances from \"./AccountBalances\"\nimport AuthnActions from \"./AuthnActions\"\nimport Button from \"./Button\"\nimport {CustomInputComponent} from \"./Inputs\"\n\nconst styles: SXStyles = {\n  form: {\n    position: \"relative\",\n  },\n  backButton: {\n    background: \"none\",\n    border: 0,\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    cursor: \"pointer\",\n    p: 0,\n    zIndex: 10,\n  },\n}\n\nexport default function AccountForm({\n  account,\n  onSubmitComplete,\n  onCancel,\n  flowAccountAddress,\n  avatarUrl,\n}: {\n  account: Account | NewAccount\n  onSubmitComplete: (createdAccountAddress?: string) => void\n  onCancel: () => void\n  flowAccountAddress: string\n  avatarUrl: string\n}) {\n  const [errors, setErrors] = useState<string[]>([])\n\n  return (\n    <Formik\n      initialValues={{\n        label: account.label,\n        scopes: new Set<string>(account.scopes),\n      }}\n      validationSchema={updateAccountSchemaClient}\n      onSubmit={async ({label, scopes}, {setSubmitting}) => {\n        setErrors([])\n\n        const scopesList = Array.from(scopes) as [string]\n\n        try {\n          if (account.address) {\n            await updateAccount(account.address, label!, scopesList)\n\n            setSubmitting(false)\n            onSubmitComplete(undefined)\n          } else {\n            const address = await newAccount(label!, scopesList)\n\n            setSubmitting(false)\n            onSubmitComplete(address)\n          }\n        } catch (error) {\n          // TODO: Fix error string\n          // setErrors([error])\n          setSubmitting(false)\n        }\n      }}\n    >\n      {({values, setFieldValue}) => (\n        <>\n          <div sx={dialogStyles.body}>\n            <Form data-test=\"fund-account-form\" sx={styles.form}>\n              <Button onClick={onCancel} sx={styles.backButton}>\n                <img src=\"/back-arrow.svg\" />\n              </Button>\n\n              <Box mb={4}>\n                <ConnectedAppHeader\n                  info={false}\n                  account={account}\n                  title={\n                    account.address ? \"Manage Account\" : \"Create New Account\"\n                  }\n                  description={account.address}\n                  flowAccountAddress={flowAccountAddress}\n                  avatarUrl={avatarUrl}\n                />\n              </Box>\n\n              <Box mb={4}>\n                <Field\n                  component={CustomInputComponent}\n                  inputLabel=\"Label\"\n                  name=\"label\"\n                  placeholder=\"Account label\"\n                  required\n                />\n              </Box>\n\n              {!!account.address && (\n                <Box mb={4}>\n                  <AccountBalances\n                    address={account.address}\n                    flowAccountAddress={flowAccountAddress}\n                  />\n                </Box>\n              )}\n\n              <Box mb={5}>\n                <AccountListItemScopes\n                  scopes={values.scopes}\n                  setScopes={newScopes => setFieldValue(\"scopes\", newScopes)}\n                  compact={true}\n                />\n              </Box>\n\n              {errors.length > 0 && <FormErrors errors={errors} />}\n            </Form>\n          </div>\n          <div sx={dialogStyles.footer}>\n            <AuthnActions account={account} onCancel={onCancel} />\n          </div>\n        </>\n      )}\n    </Formik>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport AccountImage from \"components/AccountImage\"\nimport Button from \"components/Button\"\nimport useAccount from \"hooks/useAccount\"\nimport useAuthnContext from \"hooks/useAuthnContext\"\nimport {Account, NewAccount} from \"src/accounts\"\nimport {useEffect, useState} from \"react\"\nimport {chooseAccount} from \"src/accountAuth\"\nimport {formattedBalance} from \"src/balance\"\nimport {Flex, Themed} from \"theme-ui\"\nimport {SXStyles} from \"types\"\n\nconst styles: SXStyles = {\n  accountListItem: {\n    marginX: -15,\n    paddingX: 15,\n    height: 90,\n    display: \"flex\",\n    alignItems: \"center\",\n    flex: 1,\n  },\n  accountButtonContainer: {\n    display: \"flex\",\n    items: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flex: 1,\n  },\n  accountImage: {\n    marginRight: 20,\n  },\n  chooseAccountButton: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    height: 66,\n    paddingX: 0,\n    color: \"colors.black\",\n    background: \"transparent\",\n    border: 0,\n    textAlign: \"left\",\n    fontSize: 2,\n    marginRight: 10,\n    textTransform: \"initial\",\n    fontWeight: 600,\n    lineHeight: \"1.3rem\",\n  },\n  chooseAccountAddress: {\n    fontSize: 0,\n    color: \"gray.600\",\n  },\n  chooseAccountFlow: {\n    fontSize: 0,\n    color: \"gray.600\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  chooseAccountFlowLabel: {\n    fontWeight: \"normal\",\n    ml: 2,\n  },\n  chooseAccountButtonText: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  isNew: {\n    textTransform: \"uppercase\",\n    backgroundColor: \"green\",\n    fontSize: 11,\n    fontWeight: \"bold\",\n    borderRadius: 14,\n    position: \"relative\",\n    top: \"-2px\",\n    py: \"1px\",\n    px: \"7px\",\n    ml: 2,\n  },\n  manageAccountButton: {\n    margin: 0,\n    padding: 0,\n    fontSize: 1,\n    fontWeight: \"normal\",\n  },\n}\n\nexport default function AccountsListItem({\n  account,\n  onEditAccount,\n  isNew,\n  flowAccountAddress,\n  flowAccountPrivateKey,\n  avatarUrl,\n}: {\n  account: Account\n  onEditAccount: (account: Account | NewAccount) => void\n  isNew: boolean\n  flowAccountAddress: string\n  flowAccountPrivateKey: string\n  avatarUrl: string\n}) {\n  const {connectedAppConfig} = useAuthnContext()\n  const {\n    config: {\n      app: {title},\n    },\n  } = connectedAppConfig\n\n  const [scopes, setScopes] = useState<Set<string>>(new Set(account.scopes))\n  const {data: accountData} = useAccount(account.address)\n\n  useEffect(() => {\n    setScopes(new Set(account.scopes))\n  }, [account.scopes])\n\n  const handleSelect = () => {\n    chooseAccount(\n      flowAccountPrivateKey,\n      account,\n      scopes,\n      connectedAppConfig\n    ).catch(e =>\n      // eslint-disable-next-line no-console\n      console.error(e)\n    )\n  }\n\n  return (\n    <>\n      <div sx={styles.accountListItem}>\n        <div sx={styles.accountButtonContainer}>\n          <Button\n            variant=\"unstyled\"\n            sx={styles.chooseAccountButton}\n            onClick={handleSelect}\n            data-test=\"log-in-button\"\n          >\n            <AccountImage\n              address={account.address}\n              seed={title}\n              sxStyles={styles.accountImage}\n              flowAccountAddress={flowAccountAddress}\n              avatarUrl={avatarUrl}\n            />\n            <div sx={styles.chooseAccountButtonText}>\n              <div>\n                {account.label || account.address}\n                {isNew && <span sx={styles.isNew}>New</span>}\n              </div>\n              <code sx={styles.chooseAccountAddress}>{account.address}</code>\n              <code sx={styles.chooseAccountFlow}>\n                {!!accountData?.balance\n                  ? formattedBalance(accountData.balance)\n                  : \"0\"}\n                <div sx={styles.chooseAccountFlowLabel}>FLOW</div>\n              </code>\n            </div>\n          </Button>\n          <Flex ml=\"auto\">\n            <Button\n              variant=\"link\"\n              onClick={() => onEditAccount(account)}\n              sx={styles.manageAccountButton}\n              data-test=\"manage-account-button\"\n            >\n              Manage\n            </Button>\n          </Flex>\n        </div>\n      </div>\n      <Themed.hr sx={{m: 0}} />\n    </>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport Button from \"components/Button\"\nimport React from \"react\"\nimport {SXStyles} from \"types\"\n\nconst styles: SXStyles = {\n  button: {\n    textTransform: \"none\",\n    paddingLeft: 0,\n    justifyContent: \"flex-start\",\n    backgroundColor: \"transparent\",\n    fontWeight: 600,\n  },\n  icon: {\n    backgroundColor: \"green\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 50,\n    height: 50,\n    borderRadius: 50,\n    marginRight: 3,\n    fontFamily: \"inherit\",\n    fontWeight: \"normal\",\n  },\n}\n\nexport default function PlusButton({\n  onClick,\n  disabled,\n  children,\n}: {\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n  disabled?: boolean\n  children: React.ReactNode\n}) {\n  return (\n    <Button\n      variant=\"unstyled\"\n      size=\"sm\"\n      onClick={onClick}\n      sx={styles.button}\n      block\n      disabled={disabled}\n      data-test=\"plus-button\"\n    >\n      <div sx={styles.icon}>\n        <img src=\"/plus-icon.svg\" />\n      </div>\n      {children}\n    </Button>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport AccountsListItem from \"components/AccountsListItem\"\nimport ConnectedAppHeader from \"components/ConnectedAppHeader\"\nimport PlusButton from \"components/PlusButton\"\nimport useAuthnContext from \"hooks/useAuthnContext\"\nimport {Account, NewAccount} from \"src/accounts\"\nimport accountGenerator from \"src/accountGenerator\"\nimport {Box, Themed} from \"theme-ui\"\nimport {SXStyles} from \"types\"\nimport FormErrors from \"./FormErrors\"\n\nconst styles: SXStyles = {\n  accountCreated: {\n    backgroundColor: \"#00EF8B1A\",\n    border: \"1px solid #00EF8B\",\n    textAlign: \"center\",\n    py: 10,\n    px: 3,\n    mb: 3,\n  },\n  plusButtonContainer: {\n    height: 90,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  footer: {\n    lineHeight: 1.7,\n    color: \"gray.400\",\n    fontSize: 0,\n  },\n}\n\nexport default function AccountsList({\n  accounts,\n  onEditAccount,\n  createdAccountAddress,\n  flowAccountAddress,\n  flowAccountPrivateKey,\n  avatarUrl,\n}: {\n  accounts: Account[]\n  onEditAccount: (account: Account | NewAccount) => void\n  createdAccountAddress: string | null\n  flowAccountAddress: string\n  flowAccountPrivateKey: string\n  avatarUrl: string\n}) {\n  const {initError} = useAuthnContext()\n\n  return (\n    <div>\n      <Box mb={4}>\n        <ConnectedAppHeader\n          description=\"Select an existing account to log in or create a new account.\"\n          flowAccountAddress={flowAccountAddress}\n          avatarUrl={avatarUrl}\n        />\n      </Box>\n      {createdAccountAddress && (\n        <div sx={styles.accountCreated}>\n          <b>Account Created</b>\n        </div>\n      )}\n      {initError ? (\n        <FormErrors errors={[initError]} />\n      ) : (\n        <>\n          <Box>\n            {accounts.map(account => (\n              <AccountsListItem\n                key={account.address}\n                account={account}\n                onEditAccount={onEditAccount}\n                isNew={account.address === createdAccountAddress}\n                flowAccountAddress={flowAccountAddress}\n                flowAccountPrivateKey={flowAccountPrivateKey}\n                avatarUrl={avatarUrl}\n              />\n            ))}\n          </Box>\n          <Box sx={styles.plusButtonContainer}>\n            <PlusButton\n              onClick={() =>\n                onEditAccount(accountGenerator(accounts.length - 1))\n              }\n              data-test=\"create-account-button\"\n            >\n              Create New Account\n            </PlusButton>\n          </Box>\n          <Themed.hr sx={{mt: 0, mb: 4}} />\n        </>\n      )}\n    </div>\n  )\n}\n","export type StackError = {\n  stack: string\n}\n\nexport function Err({error}: {error: StackError}) {\n  if (error == null) return null\n  return (\n    <div>\n      <pre>{error.stack}</pre>\n    </div>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport AccountForm from \"components/AccountForm\"\nimport AccountsList from \"components/AccountsList\"\nimport Dialog, {styles as dialogStyles} from \"components/Dialog\"\nimport {AuthnContextProvider} from \"contexts/AuthnContext\"\nimport useAccounts from \"hooks/useAccounts\"\nimport getConfig from \"next/config\"\nimport {Account, NewAccount} from \"src/accounts\"\nimport {useState} from \"react\"\nimport {Err} from \"src/comps/err.comp\"\nimport useConfig from \"hooks/useConfig\"\n\nfunction AuthnDialog({\n  flowAccountAddress,\n  flowAccountPrivateKey,\n  avatarUrl,\n}: {\n  flowAccountAddress: string\n  flowAccountPrivateKey: string\n  avatarUrl: string\n}) {\n  const [editingAccount, setEditingAccount] = useState<\n    Account | NewAccount | null\n  >(null)\n\n  const {\n    data: accounts,\n    error,\n    isLoading,\n    refresh: refreshAccounts,\n  } = useAccounts()\n\n  const [createdAccountAddress, setCreatedAccountAddress] = useState<\n    string | null\n  >(null)\n\n  const onEditAccount = (account: Account | NewAccount) => {\n    setCreatedAccountAddress(null)\n    setEditingAccount(account)\n  }\n\n  const onSubmitComplete = (createdAccountAddress?: string) => {\n    setEditingAccount(null)\n    if (createdAccountAddress) {\n      setCreatedAccountAddress(createdAccountAddress)\n      refreshAccounts()\n    }\n  }\n\n  const onCancel = () => setEditingAccount(null)\n\n  if (!accounts && error) return <Err error={error} />\n  if (!accounts || isLoading) return null\n\n  return (\n    <Dialog root={true}>\n      {editingAccount ? (\n        <AccountForm\n          account={editingAccount}\n          onSubmitComplete={onSubmitComplete}\n          onCancel={onCancel}\n          flowAccountAddress={flowAccountAddress}\n          avatarUrl={avatarUrl}\n        />\n      ) : (\n        <div sx={dialogStyles.body}>\n          <AccountsList\n            accounts={accounts}\n            onEditAccount={onEditAccount}\n            createdAccountAddress={createdAccountAddress}\n            flowAccountAddress={flowAccountAddress}\n            flowAccountPrivateKey={flowAccountPrivateKey}\n            avatarUrl={avatarUrl}\n          />\n        </div>\n      )}\n    </Dialog>\n  )\n}\n\nfunction Authn({avatarUrl}: {avatarUrl: string}) {\n  const {flowAccountAddress, flowAccountPrivateKey} = useConfig()\n\n  return (\n    <AuthnContextProvider>\n      <AuthnDialog\n        flowAccountAddress={flowAccountAddress}\n        flowAccountPrivateKey={flowAccountPrivateKey}\n        avatarUrl={avatarUrl}\n      />\n    </AuthnContextProvider>\n  )\n}\n\nAuthn.getInitialProps = async () => {\n  const {publicRuntimeConfig} = getConfig()\n  return {\n    avatarUrl: publicRuntimeConfig.avatarUrl,\n  }\n}\n\nexport default Authn\n","const PROFILE_SCOPES = new Set(\n  \"name family_name given_name middle_name nickname preferred_username profile picture website gender birthday zoneinfo locale updated_at\"\n    .trim()\n    .split(/\\s+/)\n)\nconst EMAIL_SCOPES = new Set(\"email email_verified\".trim().split(/\\s+/))\n\ntype CompositeSignature = {\n  f_type: string\n  f_vsn: string\n  addr: string\n  keyId: number\n  signature: string\n}\n\ntype AuthResponseService = {\n  f_type: string\n  f_vsn: string\n  type: string\n  uid: string\n  endpoint?: string\n  id?: string\n  method?: string\n  data?: Record<\n    string,\n    string | boolean | number | null | Array<CompositeSignature> | unknown\n  >\n  identity?: {\n    address: string\n    keyId?: number\n  }\n  provider?: {\n    address: string | null\n    name: string\n    icon: string | null\n    description: string\n  }\n  params?: Record<string, string>\n}\n\nconst intersection = (a: Set<string>, b: Set<string>) =>\n  new Set([...a].filter(x => b.has(x)))\n\nfunction entries<T>(arr: Array<T> = []) {\n  const arrEntries = [arr].flatMap(a => a).filter(Boolean) as Iterable<\n    readonly [PropertyKey, string]\n  >\n  return Object.fromEntries(arrEntries)\n}\n\nconst entry = (\n  scopes: Set<string>,\n  key: string,\n  value: string | boolean | number\n) => scopes.has(key) && [key, value]\n\nexport const buildServices = ({\n  baseUrl,\n  address,\n  nonce,\n  scopes,\n  compSig,\n  keyId,\n  includeRefresh = false,\n}: {\n  baseUrl: string\n  address: string\n  nonce: string | undefined\n  scopes: Set<string>\n  compSig: string | undefined\n  keyId?: number\n  includeRefresh?: boolean\n}) => {\n  const services: AuthResponseService[] = [\n    {\n      f_type: \"Service\",\n      f_vsn: \"1.0.0\",\n      type: \"authn\",\n      uid: \"fcl-dev-wallet#authn\",\n      endpoint: `${baseUrl}/fcl/authn`,\n      id: address,\n      identity: {\n        address: address,\n      },\n      provider: {\n        address: null,\n        name: \"FCL Dev Wallet\",\n        icon: null,\n        description: \"For Local Development Only\",\n      },\n    },\n    {\n      f_type: \"Service\",\n      f_vsn: \"1.0.0\",\n      type: \"authz\",\n      uid: \"fcl-dev-wallet#authz\",\n      endpoint: `${baseUrl}/fcl/authz`,\n      method: \"IFRAME/RPC\",\n      identity: {\n        address: address,\n        keyId: Number(keyId),\n      },\n    },\n    {\n      f_type: \"Service\",\n      f_vsn: \"1.0.0\",\n      type: \"user-signature\",\n      uid: \"fcl-dev-wallet#user-sig\",\n      endpoint: `${baseUrl}/fcl/user-sig`,\n      method: \"IFRAME/RPC\",\n      id: address,\n      data: {addr: address, keyId: Number(keyId)},\n      params: {},\n    },\n  ]\n\n  // Account Proof Service\n  if (nonce) {\n    services.push({\n      f_type: \"Service\",\n      f_vsn: \"1.0.0\",\n      type: \"account-proof\",\n      method: \"DATA\",\n      uid: \"fcl-dev-wallet#account-proof\",\n      data: {\n        f_type: \"account-proof\",\n        f_vsn: \"1.0.0\",\n        address: address,\n        nonce: nonce,\n        signatures: [compSig] ?? null,\n      },\n    })\n  }\n\n  // Authentication Refresh Service\n  if (includeRefresh) {\n    services.push({\n      f_type: \"Service\",\n      f_vsn: \"1.0.0\",\n      type: \"authn-refresh\",\n      uid: \"fcl-dev-wallet#authn-refresh\",\n      endpoint: `${baseUrl}/fcl/authn-refresh`,\n      method: \"IFRAME/RPC\",\n      id: address,\n      data: {\n        f_type: \"authn-refresh\",\n        f_vsn: \"1.0.0\",\n        address: address,\n        keyId: Number(keyId),\n      },\n      params: {\n        sessionId: \"C7OXWaVpU-efRymW7a5d\",\n        scopes: Array.from(scopes).join(\" \"),\n      },\n    })\n  }\n\n  if (!!scopes.size) {\n    services.push({\n      f_type: \"Service\",\n      f_vsn: \"1.0.0\",\n      type: \"open-id\",\n      uid: \"fcl-dev-wallet#open-id\",\n      method: \"data\",\n      data: {\n        f_type: \"OpenID\",\n        f_vsn: \"1.0.0\",\n        ...entries([\n          intersection(PROFILE_SCOPES, scopes).size && [\n            \"profile\",\n            entries([\n              entry(scopes, \"name\", `name[${address}]`),\n              entry(scopes, \"family_name\", `family_name[${address}]`),\n              entry(scopes, \"given_name\", `given_name[${address}]`),\n              entry(scopes, \"middle_name\", `middle_name[${address}]`),\n              entry(scopes, \"nickname\", `nickname[${address}]`),\n              entry(\n                scopes,\n                \"preferred_username\",\n                `preferred_username[${address}]`\n              ),\n              entry(scopes, \"profile\", `https://onflow.org`),\n              entry(\n                scopes,\n                \"piture\",\n                `https://https://avatars.onflow.org/avatar/${address}`\n              ),\n              entry(scopes, \"website\", \"https://onflow.org\"),\n              entry(scopes, \"gender\", `gender[${address}]`),\n              entry(\n                scopes,\n                \"birthday\",\n                `0000-${new Date().getMonth() + 1}-${new Date().getDate()}`\n              ),\n              entry(scopes, \"zoneinfo\", `America/Vancouver`),\n              entry(scopes, \"locale\", `en`),\n              entry(scopes, \"updated_at\", Date.now()),\n            ]),\n          ],\n          intersection(EMAIL_SCOPES, scopes).size && [\n            \"email\",\n            entries([\n              entry(scopes, \"email\", `${address}@example.com`),\n              entry(scopes, \"email_verified\", true),\n            ]),\n          ],\n        ]),\n      },\n    })\n  }\n\n  return services\n}\n","import {WalletUtils} from \"@onflow/fcl\"\nimport {ConnectedAppConfig} from \"hooks/useConnectedAppConfig\"\nimport {Account} from \"src/accounts\"\nimport {sign} from \"src/crypto\"\nimport getConfig from \"next/config\"\nimport {buildServices} from \"./services\"\n\ntype AccountProofData = {\n  address: string\n  nonce: string | undefined\n  appIdentifier: string | undefined\n}\n\nconst {publicRuntimeConfig} = getConfig()\n\nconst getSignature = (key: string, accountProofData: AccountProofData) => {\n  return sign(key, WalletUtils.encodeAccountProof(accountProofData))\n}\n\nfunction proveAuthn(\n  flowAccountPrivateKey: string,\n  address: string,\n  keyId: number,\n  nonce: string | undefined,\n  appIdentifier: string | undefined\n) {\n  return {\n    addr: address,\n    keyId: keyId,\n    signature: getSignature(flowAccountPrivateKey, {\n      address,\n      nonce,\n      appIdentifier,\n    }),\n  }\n}\n\nexport function refreshAuthn(\n  flowAccountPrivateKey: string,\n  address: string,\n  keyId: number,\n  scopes: Set<string>,\n  nonce: string | undefined,\n  appIdentifier: string | undefined\n) {\n  const signature = getSignature(flowAccountPrivateKey, {\n    address,\n    nonce,\n    appIdentifier,\n  })\n\n  const compSig = new WalletUtils.CompositeSignature(address, keyId, signature)\n\n  const services = buildServices({\n    baseUrl: publicRuntimeConfig.baseUrl,\n    address,\n    nonce,\n    scopes,\n    compSig,\n    keyId,\n    includeRefresh: false,\n  })\n\n  WalletUtils.approve({\n    f_type: \"AuthnResponse\",\n    f_vsn: \"1.0.0\",\n    addr: address,\n    services,\n  })\n}\n\nexport async function chooseAccount(\n  flowAccountPrivateKey: string,\n  account: Account,\n  scopes: Set<string>,\n  connectedAppConfig: ConnectedAppConfig\n) {\n  const {address, keyId} = account\n\n  const {nonce, appIdentifier} = connectedAppConfig.body\n\n  let compSig\n  if (nonce) {\n    const {addr, signature} = proveAuthn(\n      flowAccountPrivateKey,\n      address,\n      keyId!,\n      nonce,\n      appIdentifier\n    )\n    compSig = new WalletUtils.CompositeSignature(addr, keyId, signature)\n  }\n\n  const services = buildServices({\n    baseUrl: publicRuntimeConfig.baseUrl,\n    address,\n    nonce,\n    scopes,\n    compSig,\n    keyId,\n    includeRefresh: false,\n  })\n\n  localStorage.setItem(\"connectedAppConfig\", JSON.stringify(connectedAppConfig))\n\n  WalletUtils.sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    addr: address,\n    services,\n  })\n}\n","export const parseScopes = (scopes?: string) =>\n  scopes?.trim()?.split(/\\s+/) ?? []\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/fcl/authn\",\n      function () {\n        return require(\"private-next-pages/fcl/authn.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/fcl/authn\"])\n      });\n    }\n  "],"names":["styles","border","borderColor","backgroundColor","display","alignItems","overflow","width","AccountImage","address","src","seed","sxStyles","lg","flowAccountAddress","avatarUrl","size","prefixedAddress","fcl","isServiceAccount","defaultSrc","hash","encodeURI","avatar","sx","height","borderRadius","Img","image","ConnectedAppIcon","icon","appIcon","title","undefined","useContext","ConfigContext","onClick","defaultChecked","variant","id","variants","useVariants","role","ALPHABET","accountLabelGenerator","index","namegenerator","Namegenerator","nameForId","publicRuntimeConfig","getConfig","isInitialized","then","initializeWallet","fetchConfigFromAPI","flowAccessNode","flowAccountPrivateKey","flowAccountPublicKey","fclConfig","contractFungibleToken","contractFlowToken","contractFUSD","autoGeneratedLabels","Array","flowInitAccountsNo","map","_n","i","initAccountsLabels","SERVICE_ACCOUNT_LABEL","authz","flowAccountKeyId","authorization","initTransaction","Buffer","from","FCLContract","toString","t","encodeServiceKey","txId","onceSealed","d","console","log","Object","keys","contracts","AuthnContext","createContext","connectedAppConfig","appScopes","initError","AuthnContextProvider","children","useState","setIsInitialized","error","setError","setConnectedAppConfig","useEffect","WalletUtils","data","parseScopes","config","services","useConnectedAppConfig","initialize","value","Provider","headingContainer","justifyContent","heading","textTransform","color","fontWeight","fontSize","letterSpacing","AccountSectionHeading","compact","label","margin","scope","borderBottom","AccountListItemScopes","scopes","setScopes","useAuthnContext","length","mt","mb","paddingBottom","htmlFor","has","add","toggleScope","themeUIUseThemeUI","active","theme","useThemeUI","xmlns","fill","viewBox","stroke","colors","green","gray","strokeLinecap","strokeLinejoin","container","textAlign","position","info","marginTop","infoLabel","opacity","imageContainer","marginBottom","description","maxWidth","externalAddressLink","ml","externalLinkImage","top","infoButton","right","missingAppDetail","MissingAppDetail","text","href","target","ConnectedAppHeader","account","showInfo","setShowInfo","app","connectedAppTitle","prev","UNTITLED_APP_NAME","FieldError","borderBottomLeftRadius","borderBottomRightRadius","px","py","FormErrors","errors","join","updateAccountSchemaClientShape","yup","required","LABEL_MISSING_ERROR","updateAccountSchemaClient","shape","useAccount","setAccount","isLoading","setIsLoading","fetchAccount","getAccount","refresh","formattedBalance","amount","split","integer","decimal","parseFloat","toLocaleString","replace","filter","Boolean","marginRight","accountSection","balance","fundButton","AccountBalances","setBalance","fetchFUSDBalance","getAccountFUSDBalance","useFUSDBalance","fusdBalance","refreshFUSD","refreshAccount","fund","token","fundAccount","m","Button","FLOW_TYPE","type","FUSD_TYPE","actionsContainer","borderTop","actions","flex","pt","pb","onCancel","useFormikContext","isSubmitting","isValid","submitForm","block","mr","w","disabled","props","errorInputStyles","outlineColor","outline","boxShadow","red","CustomInputComponent","field","form","touched","inputLabel","showError","name","backButton","background","left","cursor","p","zIndex","AccountForm","onSubmitComplete","setErrors","initialValues","Set","validationSchema","onSubmit","setSubmitting","scopesList","updateAccount","newAccount","values","setFieldValue","dialogStyles","component","placeholder","newScopes","accountListItem","marginX","paddingX","accountButtonContainer","items","accountImage","chooseAccountButton","lineHeight","chooseAccountAddress","chooseAccountFlow","chooseAccountFlowLabel","chooseAccountButtonText","flexDirection","isNew","manageAccountButton","padding","AccountsListItem","onEditAccount","accountData","chooseAccount","e","button","paddingLeft","fontFamily","PlusButton","accountCreated","plusButtonContainer","footer","AccountsList","accounts","createdAccountAddress","Err","stack","AuthnDialog","editingAccount","setEditingAccount","useAccounts","refreshAccounts","setCreatedAccountAddress","Dialog","root","Authn","useConfig","getInitialProps","PROFILE_SCOPES","trim","EMAIL_SCOPES","intersection","a","b","x","entries","arr","arrEntries","flatMap","fromEntries","entry","key","buildServices","baseUrl","nonce","compSig","keyId","includeRefresh","f_type","f_vsn","uid","endpoint","identity","provider","method","Number","addr","params","push","signatures","sessionId","Date","getMonth","getDate","now","getSignature","accountProofData","sign","proveAuthn","appIdentifier","signature","refreshAuthn","body","localStorage","setItem","JSON","stringify","window","__NEXT_P"],"sourceRoot":""}